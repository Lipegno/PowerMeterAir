<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" height="484" width="640" currentState="colapsed"
		 >

	<fx:Script>
		<![CDATA[
			import mx.charts.series.LineSeries;
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.graphics.Stroke;
			
			import spark.components.List;
			import spark.events.IndexChangeEvent;

			
			public var eventSocket:Socket = new Socket();
			public static const NAME:String = "Notifications";
			
			public static const CLASSIFICATIONCOMPLETE:String = NAME+"/actions/CLASSIFICATIONCOMPLETE";

			
			[Bindable]
			public var events:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public var notNumber:String = "";
			
			[Bindable]
			public var unclassifiedEvents:ArrayCollection = new ArrayCollection();
			
			public var series:Array = new Array();
			
			public var comboList:List = new List();
			
			protected function label1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.currentState="expanded";
			
 			}

			protected function image1_clickHandler(event:MouseEvent):void
			{
 				this.currentState="colapsed";
			}
			
			public function changeNotLabel():void{
			
				notNumber = unclassifiedEvents.length>0?"("+unclassifiedEvents.length+")":"";
			
			}
		
			public function test():void{
						
				trace("aqui");	
				notNumber = unclassifiedEvents.length>0?"("+unclassifiedEvents.length+")":"";

			}

			// Send events
			private function sendEvent( eventName:String ):void
			{
				this.dispatchEvent( new Event( eventName ) );
			}


			public function actSeries():void
			{
				// TODO Auto-generated method stub
				var i:int =0;
				
				for(i=0;i<unclassifiedEvents.length;i++){
					
					var ls:LineSeries;
					ls = new LineSeries(); 
					var data:XML = new XML( unclassifiedEvents.getItemAt(i));
					ls.dataProvider = data..pSignature..p;
					var colorhex:String = "0x"+((Math.random()+1)*30).toString()+"4747";
					ls.setStyle("lineStroke", new Stroke(Number(colorhex), 1, 2));
					ls.setStyle("form", "curve");
					series.push(ls) ;				
					
				}
				
				assinaturas.series = series;
				changeNotLabel();

				trace("aqui");
			}


			
			protected function combobox1_changeHandler(event:IndexChangeEvent):void
			{		

				var ls:LineSeries;
				ls = new LineSeries(); 
				var data:XML = new XML( events.getItemAt(pastEvents.selectedIndex));
				ls.dataProvider = data..pSignature..p;
				var colorhex:String = "0x"+((Math.random()+1)*30).toString()+"4747";
				ls.setStyle("lineStroke", new Stroke(Number(colorhex), 1, 2));
				ls.setStyle("form", "curve");
				series.push(ls) ;	
				assinaturas.series = series;

			}

		]]>
	</fx:Script>
	<s:states>
		<s:State name="expanded" enterState="actSeries()"/>
		<s:State name="colapsed"/>
	</s:states>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:BorderContainer width="604" height="335" backgroundColor="#D9D9D9" horizontalCenter="-17" cornerRadius="20" bottom="93" borderWeight="2" includeIn="expanded">
		<s:BorderContainer id="close_cont" width="25" height="25" right="5" top="-10" borderWeight="1" dropShadowVisible="true" cornerRadius="6">
			<mx:Image click="image1_clickHandler(event)" horizontalCenter="0" verticalCenter="0" source="sinais/powermeter/view/images/close_icon.png" width="100%" height="100%"/>
		</s:BorderContainer>
		<s:BorderContainer width="100%" height="2" horizontalCenter="0" top="31" borderColor="#FFFFFF">
		</s:BorderContainer>
		<s:Label x="10" y="10" text="Notificação" fontSize="16"/>
		<s:Label x="10" y="42" text="O PowerMeter detectou um equipamento:" width="266"/>
		<s:Label x="10" y="58" text="Assinatura:" width="106"/>
		<s:Label x="460" y="79" text="Compare com:" width="106"/>
		<s:Button x="505.35" y="278.35" label="OK" width="61" click="sendEvent(CLASSIFICATIONCOMPLETE)"/>
		<mx:LineChart x="6" y="73" id="assinaturas" height="214" width="450">
		</mx:LineChart>
		<s:ComboBox id="pastEvents" x="463" y="103" width="125" dataProvider="{events}" change="combobox1_changeHandler(event)" />
	</s:BorderContainer>
	<s:Label click="label1_clickHandler(event)" text="NOTIFICATIONS" fontSize="14" x="496" y="10" text.colapsed="NOTIFICAÇÕES" text.expanded="NOTIFICAÇÕES"/>
	<s:Label x="609" y="10" text="{notNumber}" color="#FF0000"/>
</s:Group>
